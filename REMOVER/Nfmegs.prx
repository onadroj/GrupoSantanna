#include "rwmake.ch"        // incluido pelo assistente de conversao do AP5 IDE em 27/03/00
#IFNDEF WINDOWS
	#DEFINE PSAY SAY
#ENDIF

/*
Alterado em 29/10/03 - Total da nota e valores das duplicatas voltam a deduzir o ISS e INSS retidos - Edson
*/

User Function Nfmegs()        // incluido pelo assistente de conversao do AP5 IDE em 27/03/00
/*
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Declaracao de variaveis utilizadas no programa atraves da funcao    ³
³ SetPrvt, que criara somente as variaveis definidas pelo usuario,    ³
³ identificando as variaveis publicas do sistema utilizadas no codigo ³
³ Incluido pelo assistente de conversao do AP5 IDE                    ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

SetPrvt("CBTXT,CBCONT,NORDEM,ALFA,Z,M")
SetPrvt("TAMANHO,LIMITE,TITULO,CDESC1,CDESC2,CDESC3")
SetPrvt("CNATUREZA,ARETURN,NOMEPROG,CPERG,NLASTKEY,LCONTINUA")
SetPrvt("NLIN,WNREL,CSTRING,CNOTAINIC,CNOTAFINA,CSERINTFI")
SetPrvt("NTIPONTFI,NCOMPRES,NLININI,XNUM_NF,XSERIE,XEMISSAO")
SetPrvt("XTOT_FAT,XVAL_INSS,XLOJA,XFRETE,XSEGURO,XBASE_ICMS")
SetPrvt("XBASE_IPI,XVALOR_ICMS,XICMS_RET,XVALOR_IPI,XVALOR_MERC,XNUM_DUPLIC")
SetPrvt("XCOND_PAG,XPBRUTO,XPLIQUI,XTIPO,XESPECIE,XVOLUME")
SetPrvt("XVALOR_ISS,XPED_VEND,XITEM_PED,XNUM_NFDV,XPREF_DV,XICMS")
SetPrvt("XCOD_PRO,XQTD_PRO,XPRE_UNI,XPRE_TAB,XIPI,XVAL_IPI")
SetPrvt("XDESC,XVAL_DESC,XVAL_MERC,XTES,XCF,XICMSOL")
SetPrvt("XICM_PROD,CPEDATU,CITEMATU,XPESO_PRO,XPESO_UNIT,xDSC")
SetPrvt("xDESC2,x3DESCRI,XUNID_PRO,XCOD_TRIB,XMEN_TRIB,XCOD_FIS")
SetPrvt("XCLAS_FIS,XMEN_POS,XISS,XTIPO_PRO,XLUCRO,XCLFISCAL")
SetPrvt("XPESO_LIQ,I,XALIQ_ISS,NPELEM,_CLASFIS,NPTESTE")
SetPrvt("XPESO_LIQUID,XPED,XPESO_BRUTO,XP_LIQ_PED,XCLIENTE,XVENC_NF")
SetPrvt("XTIPO_CLI,XCOD_MENS,XMENSAGEM,XMENSAGEM2,XTPFRETE,XMARCA,XCONTRATO")
SetPrvt("XNUMERO,XCONDPAG,XPESO_LIQUI,XCOD_VEND,XDESC_NF,XDESC_PAG")
SetPrvt("XPED_CLI,XDESC_PRO,J,XCOD_CLI,XNOME_CLI,XEND_CLI")
SetPrvt("XBAIRRO,XCEP_CLI,XCOB_CLI,XREC_CLI,XMUN_CLI,XEST_CLI")
SetPrvt("XCGC_CLI,XINSC_CLI,XTRAN_CLI,XTEL_CLI,XFAX_CLI,XSUFRAMA")
SetPrvt("XCALCSUF,ZFRANCA,XVENDEDOR,XBSICMRET,XNOME_TRANSP,XEND_TRANSP")
SetPrvt("XMUN_TRANSP,XEST_TRANSP,XINS_TRANSP,XVIA_TRANSP,XCGC_TRANSP,XTEL_TRANSP")
SetPrvt("XPARC_DUP,XVENC_DUP,XVALOR_DUP,XNATUREZA,XFORNECE,XNFORI")
SetPrvt("XPEDIDO,XPESOPROD,XFAX,XDUPLICATAS,NCONTDETA,NCONTDUPL")
SetPrvt("NTAMEXTE,NTAMOBS,RETISS")

xPED_VEND := ARRAY(51)
xITEM_PED := ARRAY(51)
xNUM_NFDV := ARRAY(51)
xPREF_DV  := ARRAY(51)
xICMS     := ARRAY(51)
xCOD_PRO  := ARRAY(51)
xQTD_PRO  := ARRAY(51)
xPRE_UNI  := ARRAY(51)
xPRE_TAB  := ARRAY(51)
xIPI      := ARRAY(51)
xVAL_IPI  := ARRAY(51)
xDESC     := ARRAY(51)
xVAL_DESC := ARRAY(51)
xVAL_MERC := ARRAY(51)
xTES      := ARRAY(51)
xCF       := ARRAY(51)
xICMSOL   := ARRAY(51)
xICM_PROD := ARRAY(51)
xPESO_PRO  := ARRAY(51)
xPESO_UNIT := ARRAY(51)
xDSC := ARRAY(51)
xDESC2 := ARRAY(51)
x3DESCRI := ARRAY(51)
xUNID_PRO  := ARRAY(51)
xCOD_TRIB  := ARRAY(51)
xMEN_TRIB  := ARRAY(51)
xCOD_FIS   := ARRAY(51)
xCLAS_FIS  := ARRAY(51)
xMEN_POS   := ARRAY(51)
xISS       := ARRAY(51)
xTIPO_PRO  := ARRAY(51)
xLUCRO     := ARRAY(51)
xCLFISCAL  := ARRAY(51)
xPED        := ARRAY(51)
xVENDEDOR := ARRAY(51)
xPED_CLI  := ARRAY(51)
xDESC_PRO := ARRAY(51)
xPARC_DUP  := ARRAY(51)
xVENC_DUP  := ARRAY(51)
xVALOR_DUP := ARRAY(51)
xPEDIDO  := ARRAY(51)



#IFNDEF WINDOWS
	// Movido para o inicio do arquivo pelo assistente de conversao do AP5 IDE em 27/03/00 ==> 	#DEFINE PSAY SAY
#ENDIF

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³  Nfiscal ³ Autor ³   Marcos Simidu       ³ Data ³ 20/12/95 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Nota Fiscal de Entrada/Saida                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Especifico para Clientes Microsiga                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß


ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Define Variaveis Ambientais                                  ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
³ Variaveis utilizadas para parametros                              ³
³ mv_par01             // Da Nota Fiscal                            ³
³ mv_par02             // Ate a Nota Fiscal                         ³
³ mv_par03             // Da Serie                                  ³
³ mv_par04             // Nota Fiscal de Entrada/Saida              ³
³ mv_par05             // Imprime Desc. Produtos (Completo/Resumido ³
ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

CbTxt     := ""
CbCont    := ""
nOrdem    := 0
Alfa      := 0
Z         := 0
M         := 0
tamanho   := "M"
limite    := 132
titulo    := PADC("Nota Fiscal - Nfiscal",74)
cDesc1    := PADC("Este programa ira emitir a Nota Fiscal de Entrada/Saida",74)
cDesc2    := ""
cDesc3    := PADC("da Nfiscal",74)
cNatureza := ""
aReturn   := { "Especial", 1,"Administracao", 1, 2, 1,"",1 }
nomeprog  := "nfiscal"
cPerg     := "NFSIGW"
nLastKey  := 0
lContinua := .T.
nLin      := 0
wnrel     := "nffat"

/*
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as perguntas selecionadas, busca o padrao da Nfiscal           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/
Pergunte(cPerg,.F.)               // Pergunta no SX1

cString := "SF2"

/*
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Envia controle para a funcao SETPRINT                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

wnrel := SetPrint(cString,wnrel,cPerg,Titulo,cDesc1,cDesc2,cDesc3,.T.)

If (nLastKey == 27)
	Return
Endif

cNotaInic := mv_par01
cNotaFina := mv_par02
cSeriNtFi := mv_par03
nTipoNtFi := mv_par04
nCompRes  := mv_par05  //Parametro para imprimir Descricao do Produto
//Completo ou Resumido


/*
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica Posicao do Formulario na Impressora                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

SetDefault(aReturn,cString)

If (nLastKey == 27)
	Return
Endif


/*
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³                                                              ³
//³ Inicio do Processamento da Nota Fiscal                       ³
//³                                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/


#IFDEF WINDOWS
	RptStatus({|| RptDetail()})// Substituido pelo assistente de conversao do AP5 IDE em 27/03/00 ==>    RptStatus({|| Execute(RptDetail)})
	Return
	// Substituido pelo assistente de conversao do AP5 IDE em 27/03/00 ==>    Function RptDetail
	Static Function RptDetail()
#ENDIF

/*
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa  regua de impressao                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
*/

SetRegua(Val(cNotaFina)-Val(cNotaInic))

If (nTipoNtFi == 2)
	
	dbSelectArea("SF2")
	Set SoftSeek On
	dbSeek(xFilial("SF2")+cNotaInic)
	Set SoftSeek Off
	
	
	While (! Eof())                          .And. ;
		(SF2->F2_Filial == xFilial("SF2")) .And. ;
		(SF2->F2_Doc    <= cNotaFina)
		
		If (SF2->F2_Serie <> cSeriNtFi)    // Se a Serie do Arquivo for Diferente
			dbSelectArea("SF2")             // do Parametro Informado !!!
			dbSkip()
			Loop
		Endif
		
		#IFNDEF WINDOWS
			If (LastKey() == 286)
				@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
				Exit
			EndIf
		#ELSE
			If lAbortPrint
				@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
				Exit
			EndIf
		#ENDIF
		
		nLinIni := nLin                         // Linha Inicial da Impressao
		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicio de Levantamento dos Dados da Nota Fiscal              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		// * Cabecalho da Nota Fiscal
		
		xNUM_NF     := SF2->F2_Doc             // Numero
		xSERIE      := SF2->F2_Serie           // Serie
		xEMISSAO    := SF2->F2_Emissao         // Data de Emissao
		xTOT_FAT    := SF2->F2_ValFat          // Valor Total da Fatura
		xVAL_INSS   := SF2->F2_ValInss          // Valor do INSS da Fatura
		
		If (xTOT_FAT == 0)
			xTOT_FAT :=   SF2->F2_ValMerc ;
			+ SF2->F2_ValIPI  ;
			+ SF2->F2_Seguro  ;
			+ SF2->F2_Frete   ;
			- SF2->F2_ValInss ;
			- SF2->F2_VALIMP2 ;
			- SF2->F2_VALIMP3 ;
			- SF2->F2_VALIMP4
		else
			xTOT_FAT := xTOT_FAT - SF2->F2_ValInss - SF2->F2_VALIMP2 - SF2->F2_VALIMP3 - SF2->F2_VALIMP4
		EndIf
		
		xLOJA       := SF2->F2_Loja            // Loja do Cliente
		xFRETE      := SF2->F2_Frete           // Frete
		xSEGURO     := SF2->F2_Seguro          // Seguro
		xBASE_ICMS  := SF2->F2_BaseICM         // Base   do ICMS
		xBASE_IPI   := SF2->F2_BaseIPI         // Base   do IPI
		xVALOR_ICMS := SF2->F2_ValICM          // Valor  do ICMS
		xICMS_RET   := SF2->F2_ICMSRet         // Valor  do ICMS Retido
		xVALOR_IPI  := SF2->F2_ValIPI          // Valor  do IPI
		xVALOR_MERC := SF2->F2_ValMerc         // Valor  da Mercadoria
		xNUM_DUPLIC := SF2->F2_Dupl            // Numero da Duplicata
		xCOND_PAG   := SF2->F2_Cond            // Condicao de Pagamento
		xPBRUTO     := SF2->F2_PBruto          // Peso Bruto
		xPLIQUI     := SF2->F2_PLiqui          // Peso Liquido
		xTIPO       := SF2->F2_Tipo            // Tipo do Cliente
		xESPECIE    := SF2->F2_Especi1         // Especie 1 no Pedido
		xVOLUME     := SF2->F2_Volume1         // Volume 1 no Pedido
		xVALOR_ISS  := SF2->F2_VALISS          // Valor do ISS no Total da NF
		xVAL_INSS   := SF2->F2_ValInss          // Valor do INSS da Fatura
				
		xPED_VEND := {}                         // Numero do Pedido de Venda
		xITEM_PED := {}                         // Numero do Item do Pedido de Venda
		xNUM_NFDV := {}                         // nUMERO QUANDO HOUVER DEVOLUCAO
		xPREF_DV  := {}                         // Serie  quando houver devolucao
		xICMS     := {}                         // Porcentagem do ICMS
		xCOD_PRO  := {}                         // Codigo  do Produto
		xQTD_PRO  := {}                         // Peso/Quantidade do Produto
		xPRE_UNI  := {}                         // Preco Unitario de Venda
		xPRE_TAB  := {}                         // Preco Unitario de Tabela
		xIPI      := {}                         // Porcentagem do IPI
		xVAL_IPI  := {}                         // Valor do IPI
		xDESC     := {}                         // Desconto por Item
		xVAL_DESC := {}                         // Valor do Desconto
		xVAL_MERC := {}                         // Valor da Mercadoria
		xTES      := {}                         // TES
		xCF       := {}                         // Classificacao quanto natureza da Operacao
		xICMSOL   := {}                         // Base do ICMS Solidario
		xICM_PROD := {}                         // ICMS do Produto
		xmsgs:=SF2->F2_MSGS
		dbSelectArea("SD2")                   // * Itens de Venda da N.F.
		dbSetOrder(3)
		dbSeek(xFilial("SD2")+xNUM_NF+xSERIE)
		
		cPedAtu   := SD2->D2_Pedido
		cItemAtu  := SD2->D2_ItemPV
		
		While (! Eof())                          .And. ;
			(SD2->D2_Filial == xFilial("SD2")) .And. ;
			(SD2->D2_Doc    == xNUM_NF)        .And. ;
			(SD2->D2_Serie  == xSERIE)
			
			AADD(xPED_VEND ,SD2->D2_Pedido)
			AADD(xITEM_PED ,SD2->D2_ItemPV)
			AADD(xNUM_NFDV ,IIF(Empty(SD2->D2_NFOri),"",SD2->D2_NFOri))
			AADD(xPREF_DV  ,SD2->D2_SeriOri)
			AADD(xICMS     ,IIf(Empty(SD2->D2_PICM),0,SD2->D2_PICM))
			AADD(xCOD_PRO  ,SD2->D2_Cod)
			AADD(xQTD_PRO  ,SD2->D2_Quant)
			AADD(xPRE_UNI  ,SD2->D2_PrcVen)
			AADD(xPRE_TAB  ,SD2->D2_PrUnit)
			AADD(xIPI      ,IIF(Empty(SD2->D2_IPI),0,SD2->D2_IPI))
			AADD(xVAL_IPI  ,SD2->D2_ValIPI)
			AADD(xDESC     ,SD2->D2_Desc)
			AADD(xVAL_MERC ,SD2->D2_Total)
			AADD(xTES      ,SD2->D2_TES)
			AADD(xCF       ,SD2->D2_CF)
			AADD(xICM_PROD ,IIf(Empty(SD2->D2_PICM),0,SD2->D2_PICM))
			
			dbSelectArea("SD2")
			dbskip()
		End
		
		xPESO_PRO  := {}                           // Peso Liquido
		xPESO_UNIT := {}                           // Peso Unitario do Produto
		xDSC := {}                           // Descricao do Produto
		xDESC2 := {}                           // Descricao do Produto
		x3DESCRI := {}                           // Descricao do Produto
		xUNID_PRO  := {}                           // Unidade do Produto
		xCOD_TRIB  := {}                           // Codigo de Tributacao
		xMEN_TRIB  := {}                           // Mensagens de Tributacao
		xCOD_FIS   := {}                           // Cogigo Fiscal
		xCLAS_FIS  := {}                           // Classificacao Fiscal
		xMEN_POS   := {}                           // Mensagem da Posicao IPI
		xISS       := {}                           // Aliquota de ISS
		xTIPO_PRO  := {}                           // Tipo do Produto
		xLUCRO     := {}                           // Margem de Lucro p/ ICMS Solidario
		xCLFISCAL  := {}
		xPESO_LIQ  := 0
		
		I := 1
		
		
		
		dbSelectArea("SB1")                     // * Desc. Generica do Produto
		dbSetOrder(1)
		dbSeek(xFilial("SB1")+xCOD_PRO[I])
		
		
		If SB1->B1_AliqISS > 0
			xALIQ_ISS := SB1->B1_AliqISS
			AADD(xISS ,SB1->B1_AliqISS)
		else
			xALIQ_ISS := 0
		Endif
		//        MSGSTOP(XaLIQ_ISS)
		For h:=1 to Len(xCOD_PRO)
			
			dbSelectArea("SB1")                     // * Desc. Generica do Produto
			dbSetOrder(1)
			dbSeek(xFilial("SB1")+xCOD_PRO[h])
			
			AADD(xPESO_PRO ,SB1->B1_Peso * xQTD_PRO[h])
			
			//         xPESO_LIQ  := xPESO_LIQ + xPESO_PRO[h]
			
			AADD(xPESO_UNIT ,SB1->B1_Peso)
			AADD(xUNID_PRO  ,SB1->B1_UM)
			AADD(xDSC ,SB1->B1_Desc)
			AADD(xDESC2 ,SB1->B1_Desc1)
			AADD(x3DESCRI ,SB1->B1_Desc2)
			AADD(xCOD_TRIB  ,SB1->B1_Origem)
			
			If (Ascan(xMEN_TRIB ,SB1->B1_Origem) == 0)
				AADD(xMEN_TRIB ,SB1->B1_Origem)
			Endif
			
			npElem := ascan(xCLAS_FIS,SB1->B1_PosIPI)
			
			if (npElem == 0)
				AADD(xCLAS_FIS  ,SB1->B1_PosIPI)
			endif
			
			npElem := Ascan(xCLAS_FIS,SB1->B1_PosIPI)
			
			Do Case
				Case (npElem == 1)
					_CLASFIS := "A"
					
				Case (npElem == 2)
					_CLASFIS := "B"
					
				Case (npElem == 3)
					_CLASFIS := "C"
					
				Case (npElem == 4)
					_CLASFIS := "D"
					
				Case (npElem == 5)
					_CLASFIS := "E"
					
				Case (npElem == 6)
					_CLASFIS := "F"
					
			EndCase
			
			nPteste := Ascan(xCLFISCAL,_CLASFIS)
			
			If nPteste == 0
				AADD(xCLFISCAL,_CLASFIS)
			Endif
			
			AADD(xCOD_FIS ,_CLASFIS)
			
			//         If SB1->B1_AliqISS > 0
			//            xALIQ_ISS := SB1->B1_AliqISS
			//            AADD(xISS ,SB1->B1_AliqISS)
			//         else
			//            xALIQ_ISS := 0
			//        Endif
			
			
			
			AADD(xTIPO_PRO ,SB1->B1_Tipo)
			AADD(xLUCRO    ,SB1->B1_PICMRet)
			
			//
			// Calculo do Peso Liquido da Nota Fiscal
			//
			
			xPESO_LIQUID:=0                                 // Peso Liquido da Nota Fiscal
			
			For dd := 1 to Len(xPESO_PRO)
				xPESO_LIQUID := xPESO_LIQUID+xPESO_PRO[dd]
			Next
		Next
		
		xPED        := {}
		xPESO_BRUTO := 0
		xP_LIQ_PED  := 0
		
		For I := 1 to Len(xPED_VEND)
			
			If (Ascan(xPED,xPED_VEND[I]) == 0)
				dbSelectArea("SC5")                            // * Pedidos de Venda
				dbSetOrder(1)
				dbSeek(xFilial("SC5")+xPED_VEND[I])
				
				xCLIENTE    := SC5->C5_Cliente            // Codigo do Cliente
				xVENC_NF    := SC5->C5_DATA1              // Data de Vencimento
				xTIPO_CLI   := SC5->C5_TipoCli            // Tipo de Cliente
				xCOD_MENS   := SC5->C5_MenPad             // Codigo da Mensagem Padrao
				xMENSAGEM   := SC5->C5_MenNota            // Mensagem para a Nota Fiscal
				xMENSAGEM2  := SC5->C5_MENOT2             // Mensagem para a Nota Fiscal 2
				xTPFRETE    := SC5->C5_TpFrete            // Tipo de Entrega
				xMARCA      := SC5->C5_Marca              // Marca
				xCONTRATO   := SC5->C5_CONTRAT            // Codigo do Contrato
				xNUMERO     := SC5->C5_Numero             // Numero
				xCONDPAG    := SC5->C5_CondPag            // Condicao de Pagamento
				xPESO_BRUTO := SC5->C5_PBruto             // Peso Bruto
				xPESO_LIQUI := SC5->C5_PesoL              // Peso Bruto
				xP_LIQ_PED  := xP_LIQ_PED + SC5->C5_PesoL // Peso Liquido
				
				xCOD_VEND   := {SC5->C5_Vend1 ,;          // Codigo do Vendedor 1
				SC5->C5_Vend2 ,;          // Codigo do Vendedor 2
				SC5->C5_Vend3 ,;          // Codigo do Vendedor 3
				SC5->C5_Vend4 ,;          // Codigo do Vendedor 4
				SC5->C5_Vend5}            // Codigo do Vendedor 5
				
				xDESC_NF    := {SC5->C5_Desc1 ,;          // Desconto Global 1
				SC5->C5_Desc2 ,;          // Desconto Global 2
				SC5->C5_Desc3 ,;          // Desconto Global 3
				SC5->C5_Desc4}            // Desconto Global 4
				
				AADD(xPED,xPED_VEND[I])
			Endif
			
			If xP_LIQ_PED >0
				xPESO_LIQ := xP_LIQ_PED
			Endif
			
		Next
		

		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa da Retenção de ISS no contrato     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
//		RETISS:=.F.
//		DBSELECTAREA("SZL")
//		DBSETORDER(1)
//		IF DBSEEK(XFILIAL("SZL")+xCONTRATO)
//			IF SZL->ZL_ISSRET == "S"
//				RETISS:=.T.
//			ENDIF
//		ENDIF
//		if !RETISS
//		   xTOT_FAT:=xTOT_FAT + xVALOR_ISS
//		endif

		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa da Condicao de Pagto               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		dbSelectArea("SE4")                    // Condicao de Pagamento
		dbSetOrder(1)
		dbSeek(xFilial("SE4")+xCONDPAG)
		
		xDESC_PAG := SE4->E4_Descri
		
		xPED_CLI  := {}                          // Numero de Pedido
		xDESC_PRO := {}                          // Descricao aux do produto
		J         := Len(xPED_VEND)
		
		For I := 1 to J
			dbSelectArea("SC6")                    // * Itens de Pedido de Venda
			dbSetOrder(1)
			dbSeek(xFilial("SC6")+xPED_VEND[I]+xITEM_PED[I])
			
			AADD(xPED_CLI  ,SC6->C6_PedCli)
			AADD(xDESC_PRO ,SC6->C6_Descri)
			AADD(xVAL_DESC ,SC6->C6_ValDesc)
		Next
		
		If (xTIPO $ "N/C/P/I/S/T/O")
			
			dbSelectArea("SA1")                // * Cadastro de Clientes
			dbSetOrder(1)
			dbSeek(xFilial("SA1")+xCLIENTE+xLOJA)
			
			xCOD_CLI  := SA1->A1_Cod             // Codigo do Cliente
			xNOME_CLI := SA1->A1_Nome            // Nome
			xEND_CLI  := SA1->A1_End             // Endereco
			xBAIRRO   := SA1->A1_Bairro          // Bairro
			xCEP_CLI  := SA1->A1_CEP             // CEP
			xCOB_CLI  := SA1->A1_EndCob          // Endereco de Cobranca
			xREC_CLI  := SA1->A1_EndEnt          // Endereco de Entrega
			xMUN_CLI  := SA1->A1_Mun             // Municipio
			xEST_CLI  := SA1->A1_Est             // Estado
			xCGC_CLI  := SA1->A1_CGC             // CGC
			xINSC_CLI := SA1->A1_Inscr           // Inscricao estadual
			xTRAN_CLI := SA1->A1_Transp          // Transportadora
			xTEL_CLI  := SA1->A1_Tel             // Telefone
			xFAX_CLI  := SA1->A1_Fax             // Fax
			xSUFRAMA  := SA1->A1_Suframa            // Codigo Suframa
			xCALCSUF  := SA1->A1_CalcSuf            // Calcula Suframa
			
			// Alteracao p/ Calculo de Suframa
			
			If (! Empty(xSUFRAMA)) .and. (xCALCSUF =="S")
				If (xTIPO $ "D/B")
					zFranca := .F.
				Else
					zFranca := .T.
				EndIf
			Else
				zFranca := .F.
			EndIf
			
		Else
			zFranca := .F.
			
			dbSelectArea("SA2")                // * Cadastro de Fornecedores
			dbSetOrder(1)
			dbSeek(xFilial("SA2")+xCLIENTE+xLOJA)
			
			xCOD_CLI  := SA2->A2_Cod             // Codigo do Fornecedor
			xNOME_CLI := SA2->A2_Nome            // Nome Fornecedor
			xEND_CLI  := SA2->A2_End             // Endereco
			xBAIRRO   := SA2->A2_Bairro          // Bairro
			xCEP_CLI  := SA2->A2_CEP             // CEP
			xCOB_CLI  := ""                      // Endereco de Cobranca
			xREC_CLI  := ""                      // Endereco de Entrega
			xMUN_CLI  := SA2->A2_Mun             // Municipio
			xEST_CLI  := SA2->A2_Est             // Estado
			xCGC_CLI  := SA2->A2_CGC             // CGC
			xINSC_CLI := SA2->A2_Inscr           // Inscricao estadual
			xTRAN_CLI := SA2->A2_Transp          // Transportadora
			xTEL_CLI  := SA2->A2_Tel             // Telefone
			xFAX_CLI  := SA2->A2_Fax             // Fax
		Endif
		
		xVENDEDOR:= {}                         // Nome do Vendedor
		I        := 1
		J        := Len(xCOD_VEND)
		
		For I := 1 to J
			dbSelectArea("SA3")                   // * Cadastro de Vendedores
			dbSetOrder(1)
			dbSeek(xFilial("SA3")+xCOD_VEND[I])
			
			Aadd(xVENDEDOR,SA3->A3_NReduz)
		Next
		
		If (xICMS_RET > 0)                        // Apenas se ICMS Retido > 0
			dbSelectArea("SF3")                   // * Cadastro de Livros Fiscais
			dbSetOrder(4)
			dbSeek(xFilial("SF3")+SA1->A1_Cod+SA1->A1_Loja+SF2->F2_Doc+SF2->F2_Serie)
			
			If (! Eof())
				xBSICMRET := SF3->F3_ValObse
			Else
				xBSICMRET := 0
			Endif
		Else
			xBSICMRET := 0
		Endif
		
		dbSelectArea("SA4")                   // * Transportadoras
		dbSetOrder(1)
		dbSeek(xFilial("SA4")+SF2->F2_Transp)
		
		xNOME_TRANSP := SA4->A4_Nome           // Nome Transportadora
		xEND_TRANSP  := SA4->A4_End            // Endereco
		xMUN_TRANSP  := SA4->A4_Mun            // Municipio
		xEST_TRANSP  := SA4->A4_Est            // Estado
		xINS_TRANSP  := SA4->A4_InsEst         // Inscricao Estadual
		xVIA_TRANSP  := SA4->A4_Via            // Via de Transporte
		xCGC_TRANSP  := SA4->A4_CGC            // CGC
		xTEL_TRANSP  := SA4->A4_Tel            // Fone
		
		xPARC_DUP  := {}                        // Parcela
		xVENC_DUP  := {}                        // Vencimento
		xVALOR_DUP := {}                        // Valor
		
		dbSelectArea("SE1")
		dbSetOrder(1)
		dbSeek(xFilial("SE1")+xSERIE+xNUM_DUPLIC,.T.)
		
		While (! Eof())                           .And. ;
			(SE1->E1_Filial  == xFilial("SE1")) .And. ;
			(SE1->E1_Prefixo == xSERIE)         .And. ;
			(SE1->E1_Num     == xNUM_DUPLIC)
			
			If (! (ALLTRIM(SE1->E1_TIPO) $ "NF"))
				dbSelectArea("SE1")
				dbSkip()
				Loop
			Endif
			
			AADD(xPARC_DUP  ,SE1->E1_Parcela)
			AADD(xVENC_DUP  ,SE1->E1_Vencto)
   	 	    AADD(xVALOR_DUP ,SE1->E1_Valor-SE1->E1_INSS-SE1->E1_PIS-SE1->E1_COFINS-SE1->E1_CSLL)	//Valor da duplicata com dedução do INSS, PIS, COFINS e CSLL
//			AADD(xVALOR_DUP ,SE1->E1_Valor)        			//Valor da duplicata sem dedução do INSS
			dbSkip()
		EndDo
		
		dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
		DbSetOrder(1)
		dbSeek(xFilial("SF4")+xTES[1])
		
		xNATUREZA := SF4->F4_Texto            // Natureza da Operacao
		
		Imprime()
		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Termino da Impressao da Nota Fiscal                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		IncRegua()                    // Termometro de Impressao
		
		nLin := 0
		
		dbSelectArea("SF2")
		dbSkip()                      // passa para a proxima Nota Fiscal
	EndDo
Else
	
	dbSelectArea("SF1")              // * Cabecalho da Nota Fiscal Entrada
	
	dbSeek(xFilial()+cNotaInic+cSeriNtFi,.t.)
	
	While !eof() .and. SF1->F1_DOC <= cNotaFina .and. SF1->F1_SERIE == cSeriNtFi .and. lContinua
		
		If SF1->F1_SERIE <> cSeriNtFi    // Se a Serie do Arquivo for Diferente
			DbSkip()                    // do Parametro Informado !!!
			Loop
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicializa  regua de impressao                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SetRegua(Val(cNotaFina)-Val(cNotaInic))
		
		#IFNDEF WINDOWS
			IF LastKey()==286
				@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
				lContinua := .F.
				Exit
			Endif
		#ELSE
			IF lAbortPrint
				@ 00,01 PSAY "** CANCELADO PELO OPERADOR **"
				lContinua := .F.
				Exit
			Endif
		#ENDIF
		
		nLinIni:=nLin                         // Linha Inicial da Impressao
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Inicio de Levantamento dos Dados da Nota Fiscal              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		xNUM_NF     :=SF1->F1_DOC             // Numero
		xSERIE      :=SF1->F1_SERIE           // Serie
		xFORNECE    :=SF1->F1_FORNECE         // Cliente/Fornecedor
		xEMISSAO    :=SF1->F1_EMISSAO         // Data de Emissao
		xTOT_FAT    :=SF1->F1_VALBRUT         // Valor Bruto da Compra
		xLOJA       :=SF1->F1_LOJA            // Loja do Cliente
		xFRETE      :=SF1->F1_FRETE           // Frete
		xSEGURO     :=SF1->F1_DESPESA         // Despesa
		xBASE_ICMS  :=SF1->F1_BASEICM         // Base   do ICMS
		xBASE_IPI   :=SF1->F1_BASEIPI         // Base   do IPI
		xBSICMRET   :=SF1->F1_BRICMS          // Base do ICMS Retido
		xVALOR_ICMS :=SF1->F1_VALICM          // Valor  do ICMS
		xICMS_RET   :=SF1->F1_ICMSRET         // Valor  do ICMS Retido
		xVALOR_IPI  :=SF1->F1_VALIPI          // Valor  do IPI
		xVALOR_MERC :=SF1->F1_VALMERC         // Valor  da Mercadoria
		xNUM_DUPLIC :=SF1->F1_DUPL            // Numero da Duplicata
		xCOND_PAG   :=SF1->F1_COND            // Condicao de Pagamento
		xTIPO       :=SF1->F1_TIPO            // Tipo do Cliente
		xNFORI      :=SF1->F1_NFORI           // NF Original
		xPREF_DV    :=SF1->F1_SERIORI         // Serie Original
		xmsgs:=     ""
		
		dbSelectArea("SD1")                   // * Itens da N.F. de Compra
		dbSetOrder(1)
		dbSeek(xFilial()+xNUM_NF+xSERIE+xFORNECE+xLOJA)
		
		cPedAtu := SD1->D1_PEDIDO
		cItemAtu:= SD1->D1_ITEMPC
		
		xPEDIDO  :={}                         // Numero do Pedido de Compra
		xITEM_PED:={}                         // Numero do Item do Pedido de Compra
		xNUM_NFDV:={}                         // Numero quando houver devolucao
		xPREF_DV :={}                         // Serie  quando houver devolucao
		xICMS    :={}                         // Porcentagem do ICMS
		xCOD_PRO :={}                         // Codigo  do Produto
		xQTD_PRO :={}                         // Peso/Quantidade do Produto
		xPRE_UNI :={}                         // Preco Unitario de Compra
		xIPI     :={}                         // Porcentagem do IPI
		xPESOPROD:={}                         // Peso do Produto
		xVAL_IPI :={}                         // Valor do IPI
		xDESC    :={}                         // Desconto por Item
		xVAL_DESC:={}                         // Valor do Desconto
		xVAL_MERC:={}                         // Valor da Mercadoria
		xTES     :={}                         // TES
		xCF      :={}                         // Classificacao quanto natureza da Operacao
		xICMSOL  :={}                         // Base do ICMS Solidario
		xICM_PROD:={}                         // ICMS do Produto
		
		while !eof() .and. SD1->D1_DOC==xNUM_NF
			If SD1->D1_SERIE #cSeriNtFi        // Se a Serie do Arquivo for Diferente
				DbSkip()                      // do Parametro Informado !!!
				Loop
			Endif
			
			AADD(xPEDIDO ,SD1->D1_PEDIDO)           // Ordem de Compra
			AADD(xITEM_PED ,SD1->D1_ITEMPC)         // Item da O.C.
			AADD(xNUM_NFDV ,IIF(Empty(SD1->D1_NFORI),"",SD1->D1_NFORI))
			AADD(xPREF_DV  ,SD1->D1_SERIORI)        // Serie Original
			AADD(xICMS     ,IIf(Empty(SD1->D1_PICM),0,SD1->D1_PICM))
			AADD(xCOD_PRO  ,SD1->D1_COD)            // Produto
			AADD(xQTD_PRO  ,SD1->D1_QUANT)          // Guarda as quant. da NF
			AADD(xPRE_UNI  ,SD1->D1_VUNIT)          // Valor Unitario
			AADD(xIPI      ,SD1->D1_IPI)            // % IPI
			AADD(xVAL_IPI  ,SD1->D1_VALIPI)         // Valor do IPI
			AADD(xPESOPROD ,SD1->D1_PESO)           // Peso do Produto
			AADD(xDESC     ,SD1->D1_DESC)           // % Desconto
			AADD(xVAL_MERC ,SD1->D1_TOTAL)          // Valor Total
			AADD(xTES      ,SD1->D1_TES)            // Tipo de Entrada/Saida
			AADD(xCF       ,SD1->D1_CF)             // Codigo Fiscal
			AADD(xICM_PROD ,IIf(Empty(SD1->D1_PICM),0,SD1->D1_PICM))
			dbskip()
		End
		
		dbSelectArea("SB1")                     // * Desc. Generica do Produto
		dbSetOrder(1)
		xUNID_PRO:={}                           // Unidade do Produto
		xDESC_PRO:={}                           // Descricao do Produto
		xMEN_POS :={}                           // Mensagem da Posicao IPI
		xDSC :={}                         // Descricao do Produto
		xCOD_TRIB:={}                           // Codigo de Tributacao
		xMEN_TRIB:={}                           // Mensagens de Tributacao
		xCOD_FIS :={}                           // Cogigo Fiscal
		xCLAS_FIS:={}                           // Classificacao Fiscal
		xISS     :={}                           // Aliquota de ISS
		xTIPO_PRO:={}                           // Tipo do Produto
		xLUCRO   :={}                           // Margem de Lucro p/ ICMS Solidario
		xCLFISCAL   :={}
		xSUFRAMA :=""
		xCALCSUF :=""
		
		I:=1
		For I:=1 to Len(xCOD_PRO)
			
			dbSeek(xFilial()+xCOD_PRO[I])
			dbSelectArea("SB1")
			
			AADD(xDESC_PRO ,SB1->B1_DESC)
			AADD(xUNID_PRO ,SB1->B1_UM)
			AADD(xCOD_TRIB ,SB1->B1_ORIGEM)
			If Ascan(xMEN_TRIB, SB1->B1_ORIGEM)==0
				AADD(xMEN_TRIB ,SB1->B1_ORIGEM)
			Endif
			AADD(xDSC ,SB1->B1_DESC)
			AADD(xMEN_POS  ,SB1->B1_POSIPI)
			If SB1->B1_ALIQISS > 0
				AADD(xISS,SB1->B1_ALIQISS)
			Endif
			AADD(xTIPO_PRO ,SB1->B1_TIPO)
			AADD(xLUCRO    ,SB1->B1_PICMRET)
			
			npElem := ascan(xCLAS_FIS,SB1->B1_POSIPI)
			
			if npElem == 0
				AADD(xCLAS_FIS  ,SB1->B1_POSIPI)
			endif
			npElem := ascan(xCLAS_FIS,SB1->B1_POSIPI)
			
			DO CASE
				CASE npElem == 1
					_CLASFIS := "A"
					
				CASE npElem == 2
					_CLASFIS := "B"
					
				CASE npElem == 3
					_CLASFIS := "C"
					
				CASE npElem == 4
					_CLASFIS := "D"
					
				CASE npElem == 5
					_CLASFIS := "E"
					
				CASE npElem == 6
					_CLASFIS := "F"
					
			EndCase
			nPteste := Ascan(xCLFISCAL,_CLASFIS)
			If nPteste == 0
				AADD(xCLFISCAL,_CLASFIS)
			Endif
			AADD(xCOD_FIS ,_CLASFIS)
			
		Next
		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Pesquisa da Condicao de Pagto               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		dbSelectArea("SE4")                    // Condicao de Pagamento
		dbSetOrder(1)
		dbSeek(xFilial("SE4")+xCOND_PAG)
		xDESC_PAG := SE4->E4_DESCRI
		
		If xTIPO == "D"
			
			dbSelectArea("SA1")                // * Cadastro de Clientes
			dbSetOrder(1)
			dbSeek(xFilial()+xFORNECE)
			xCOD_CLI :=SA1->A1_COD             // Codigo do Cliente
			xNOME_CLI:=SA1->A1_NOME            // Nome
			xEND_CLI :=SA1->A1_END             // Endereco
			xBAIRRO  :=SA1->A1_BAIRRO          // Bairro
			xCEP_CLI :=SA1->A1_CEP             // CEP
			xCOB_CLI :=SA1->A1_ENDCOB          // Endereco de Cobranca
			xREC_CLI :=SA1->A1_ENDENT          // Endereco de Entrega
			xMUN_CLI :=SA1->A1_MUN             // Municipio
			xEST_CLI :=SA1->A1_EST             // Estado
			xCGC_CLI :=SA1->A1_CGC             // CGC
			xINSC_CLI:=SA1->A1_INSCR           // Inscricao estadual
			xTRAN_CLI:=SA1->A1_TRANSP          // Transportadora
			xTEL_CLI :=SA1->A1_TEL             // Telefone
			xFAX_CLI :=SA1->A1_FAX             // Fax
			
		Else
			
			dbSelectArea("SA2")                // * Cadastro de Fornecedores
			dbSetOrder(1)
			dbSeek(xFilial()+xFORNECE+xLOJA)
			xCOD_CLI :=SA2->A2_COD                // Codigo do Cliente
			xNOME_CLI:=SA2->A2_NOME               // Nome
			xEND_CLI :=SA2->A2_END                // Endereco
			xBAIRRO  :=SA2->A2_BAIRRO             // Bairro
			xCEP_CLI :=SA2->A2_CEP                // CEP
			xCOB_CLI :=""                         // Endereco de Cobranca
			xREC_CLI :=""                         // Endereco de Entrega
			xMUN_CLI :=SA2->A2_MUN                // Municipio
			xEST_CLI :=SA2->A2_EST                // Estado
			xCGC_CLI :=SA2->A2_CGC                // CGC
			xINSC_CLI:=SA2->A2_INSCR              // Inscricao estadual
			xTRAN_CLI:=SA2->A2_TRANSP             // Transportadora
			xTEL_CLI :=SA2->A2_TEL                // Telefone
			xFAX     :=SA2->A2_FAX                // Fax
			
		EndIf
		
		dbSelectArea("SE1")                   // * Contas a Receber
		dbSetOrder(1)
		xPARC_DUP  :={}                       // Parcela
		xVENC_DUP  :={}                       // Vencimento
		xVALOR_DUP :={}                       // Valor
		xDUPLICATAS:=IIF(dbSeek(xFilial()+xSERIE+xNUM_DUPLIC,.T.),.T.,.F.) // Flag p/Impressao de Duplicatas
		
		while !eof() .and. SE1->E1_NUM==xNUM_DUPLIC .and. xDUPLICATAS==.T.
			AADD(xPARC_DUP ,SE1->E1_PARCELA)
			AADD(xVENC_DUP ,SE1->E1_VENCTO)
			AADD(xVALOR_DUP,SE1->E1_VALOR-SE1->E1_INSS)		//Valor da duplicata com dedução do INSS
//			AADD(xVALOR_DUP,SE1->E1_VALOR)					//Valor da duplicata sem dedução do INSS
			dbSkip()
		EndDo
		
		dbSelectArea("SF4")                   // * Tipos de Entrada e Saida
		dbSetOrder(1)
		dbSeek(xFilial()+SD1->D1_TES)
		xNATUREZA:=SF4->F4_TEXTO              // Natureza da Operacao
		
		xNOME_TRANSP :=" "           // Nome Transportadora
		xEND_TRANSP  :=" "           // Endereco
		xMUN_TRANSP  :=" "           // Municipio
		xEST_TRANSP  :=" "           // Estado
		xVIA_TRANSP  :=" "           // Via de Transporte
		xCGC_TRANSP  :=" "           // CGC
		xTEL_TRANSP  :=" "           // Fone
		xTPFRETE     :=" "           // Tipo de Frete
		xVOLUME      := 0            // Volume
		xESPECIE     :=" "           // Especie
		xPESO_LIQ    := 0            // Peso Liquido
		xPESO_BRUTO  := 0            // Peso Bruto
		xCOD_MENS    :=" "           // Codigo da Mensagem
		xMENSAGEM    :=" "           // Mensagem da Nota
		//      xMENSAGEM2   :=" "           // Mensagem da Nota 2
		xPESO_LIQUID :=" "
		
		
		Imprime()
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Termino da Impressao da Nota Fiscal                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		IncRegua()                    // Termometro de Impressao
		
		nLin:=0
		dbSelectArea("SF1")
		dbSkip()                     // e passa para a proxima Nota Fiscal
		
	EndDo
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³                                                              ³
//³                      FIM DA IMPRESSAO                        ³
//³                                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fechamento do Programa da Nota Fiscal                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

dbSelectArea("SF2")
Retindex("SF2")
dbSelectArea("SF1")
Retindex("SF1")
dbSelectArea("SD2")
Retindex("SD2")
dbSelectArea("SD1")
Retindex("SD1")
Set Device To Screen

If aReturn[5] == 1
	Set Printer TO
	dbcommitAll()
	ourspool(wnrel)
Endif

MS_FLUSH()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Fim do Programa                                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

/*
*############################################################################
*###################  Funcoes Especificas  ##################################
*############################################################################
*/
// Substituido pelo assistente de conversao do AP5 IDE em 27/03/00 ==> Function IMPMENP
Static Function IMPMENP()
/*
*****************************************************************************
* Impressao Mensagem Padrao da Nota Fiscal
*
***
*/
nlin := 50
If (! Empty(xCOD_MENS))
	@ nLin, 017 PSAY FORMULA(xCOD_MENS)
	nLin := nLin + 1
Endif

Return



// Substituido pelo assistente de conversao do AP5 IDE em 27/03/00 ==> Function IMPDET
Static Function IMPDET()
/*
*****************************************************************************
* Impressao de Linhas de Detalhe da Nota Fiscal
*
***
*/

nContDeta := (IIf(Len(xCOD_PRO) > 12,12,Len(xCOD_PRO)))

@ nlin, 010 PSAY xMENSAGEM
//@ nlin+1, 010 PSAY xMENSAGEM2

nlin := nLin + 3

For J := 1 to nContDeta
	
	@ nLin, 010  PSAY xDSC[J]
	@ nLin, 096  PSAY xPRE_UNI[J]               Picture"@E 99,999,999.99"
	@ nLin, 116  PSAY xVAL_MERC[J]              Picture"@E 99,999,999.99"
	nLin := nLin+1
	
	// If ! Empty(xDESC2[I])
	If (! Empty(xDESC2[J]) .and. nCompRes== 1)
		@ nLin, 010  PSAY xDESC2[J]
		nLin := nLin+1
	EndIf
	
	If (! Empty(x3DESCRI[J]).and. nCompRes== 1 )
		@ nLin, 010  PSAY x3DESCRI[J]
		nLin := nLin+1
	EndIf
Next

Return



Static Function DUPLIC()
/*
*****************************************************************************
* Impressao do Parcelamento das Duplicacatas
*
***
*/

_nn:=Len(xVALOR_DUP)
IF _nn == 0
//	return
else
	_vv:=int(Len(xVALOR_DUP)/2)
	if mod(Len(xVALOR_DUP),2) <>0
		_vv:=_vv+1
	endif
	nlin:=11
	for _xx:=1 to _vv
		@ nlin+_xx, 026 PSAY xNUM_DUPLIC+"/"+xPARC_DUP[(_xx*2)-1]                  // Numero da Nota Fiscal
		if (_xx*2)<=_nn
			@ nlin+_xx, 035 PSAY xNUM_DUPLIC+"/"+xPARC_DUP[(_xx*2)]                          // Numero da Nota Fiscal
		ENDIF
		@ nlin+_xx, 050  PSAY xVALOR_DUP[(_xx*2)-1] Picture "@E@Z 999,999,999.99"  // Valor Tot. Prod.
		if (_xx*2)<=_nn
			@ nlin+_xx, 065  PSAY xVALOR_DUP[(_xx*2)] Picture "@E@Z 999,999,999.99"  // Valor Tot. Prod.
		ENDIF
		@ nlin+_xx, 087 PSAY xNUM_DUPLIC+"/"+xPARC_DUP[(_xx*2)-1]  //Numero da Nota Fiscal
		if (_xx*2)<=_nn
			@ nlin+_xx, 096 PSAY  xNUM_DUPLIC+"/"+xPARC_DUP[(_xx*2)]     // Numero da Nota Fiscal
		ENDIF
		@ nlin+_xx, 110 PSAY xVENC_DUP[(_xx*2)-1] //Data de Vencimento
		if (_xx*2)<=_nn
			@ nlin+_xx, 119 PSAY xVENC_DUP[(_xx*2)]       // Data de Vencimento
		endif
	next
endif
Return




Static Function Imprime()
/*
*****************************************************************************
* Imprime a Nota Fiscal de Entrada e de Saida
*
*****************************************************************************
*/
* Impressao do Cabecalho da N.F.

@ 02, 000 PSAY Chr(15)                  // Compressao de Impressao
@ 08, 086 PSAY xEMISSAO                 // Data da Emissao do Documento

* Impressao da Fatura

nLin := 10

/*gatasse 28/03/03
@ 12, 034 PSAY xNUM_NF                                     // Numero da Nota Fiscal
@ 12, 049  PSAY xVALOR_MERC  Picture "@E@Z 999,999,999.99"  // Valor Tot. Prod.
//@ 12, 049 PSAY xTOT_FAT     Picture "@E@Z 999,999,999.99"  // Valor Total NF
@ 12, 091 PSAY xNUM_NF                                     // Numero da Nota Fiscal
@ 12, 115 PSAY xVENC_NF                                    // Data de Vencimento
*/

Duplic()

* Impressao dos Dados do Cliente

@ 18, 039 PSAY xNOME_CLI                                  // Nome do Cliente
@ 19, 039 PSAY xEND_CLI                                   // Endereco
@ 20, 039 PSAY xMUN_CLI                                   // Municipio
@ 20, 127 PSAY xEST_CLI                                   // U.F.
@ 21, 039 PSAY xCOB_CLI                                   // Endereco de cobranca
@ 22, 039 PSAY xCGC_CLI  Picture "@R 99.999.999/9999-99"
@ 22, 086 PSAY xINSC_CLI                                 // Insc. Estadual

* Impressao por extenso do Valor

aAreaX := GETAREA() //Funcao extenso desposiciona o Alias
//nTamExte := Len(Extenso(xVALOR_MERC))
nTamExte := Len(Extenso(xTOT_FAT))

nTamObs  := 120

If (nTamExte > 120)
//	@ 25 ,014 PSAY SubStr(Extenso(xVALOR_MERC),001,120)
//	@ 26 ,014 PSAY SubStr(Extenso(xVALOR_MERC),120) + " " + Replicate("*",115 - (nTamExte - 120))
	@ 25 ,014 PSAY SubStr(Extenso(xTOT_FAT),001,120)
	@ 26 ,014 PSAY SubStr(Extenso(xTOT_FAT),120) + " " + Replicate("*",115 - (nTamExte - 120))
Else
//	@ 25 ,014 PSAY SubStr(Extenso(xVALOR_MERC),001,nTamExte) + " " + Replicate("*",115 - nTamExte)
	@ 25 ,014 PSAY SubStr(Extenso(xTOT_FAT),001,nTamExte) + " " + Replicate("*",115 - nTamExte)
	@ 26 ,014 PSAY Replicate("*",115)
EndIf
RESTAREA(aAreaX)

// Dados dos Produtos Vendidos

nLin := 31
ImpDet()                 // Detalhe da NF

nLin := 43    
_NL:=mlcount(xmsgs,60)
for _xx:=1 to _nl
	@ nlin+_xx, 010 PSAY memoline(xmsgs,60,_xx)
next


//* Impressao do Rodape da NF
//IF xVAL_INSS <> 0
//	@ 48, 017  PSAY "RETENCAO PARA PREVIDENCIA SOCIAL - R$"
//	@ 48, 055  PSAY AllTrim(Transform(xVAL_INSS,"@E@Z 999,999,999.99"))  // INSS retido
//ENDIF

//ImpMenp()             // Imprime Mensagem Padrao da Nota Fiscal

//IF SM0->M0_CODIGO $ "03/08"
	@ 52, 115  PSAY xVALOR_MERC     Picture "@E@Z 999,999,999.99"  // Valor Tot. Prod.
	IF xVALOR_ISS <> 0
		@ 54, 115  PSAY xALIQ_ISS    Picture "@E@Z 999,999,999.99"  // Porcentagem de ISS
		@ 55, 042  PSAY xALIQ_ISS    Picture "@E@Z 999,999,999.99"  // Porcentagem de ISS
		@ 56, 115  PSAY xVALOR_ISS   Picture "@E@Z 999,999,999.99"  // Valor Total de ISS
	ENDIF
//@ 56, 115  PSAY xTOT_FAT     Picture "@E@Z 999,999,999.99"  // Valor Total NF no modelo 2003
//ELSE 
//	@ 54, 115  PSAY xVALOR_MERC     Picture "@E@Z 999,999,999.99"  // Valor Tot. Prod.
//	IF xVALOR_ISS <> 0
//		@ 55, 042  PSAY xALIQ_ISS    Picture "@E@Z 999,999,999.99"  // Porcentagem de ISS
//		@ 55, 059  PSAY xVALOR_ISS   Picture "@E@Z 999,999,999.99"  // Valor Total de ISS
//	ENDIF
//	@ 56, 115  PSAY xVALOR_MERC     Picture "@E@Z 999,999,999.99"  // Valor Total NF
//ENDIF


@ 66, 000 PSAY chr(18)                   // Descompressao de Impressao

SetPrc(0,0)                              // (Zera o Formulario)

Return .t.

